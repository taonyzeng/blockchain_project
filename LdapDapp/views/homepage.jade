extends layout

block content
    if (info)
        if (info === "Create successfully.")
            div.alert.alert-primary #{info}
        else
            div.alert.alert-danger #{info}

    if (createInfo)
        div.alert.alert-primary #{createInfo}
    .row
        .col-md-6.center-block.offset-md-3
            .card.text-center
                .card-header(style="font-size: 1.5rem; font-weight:bold")
                    | System Login
                .card-body
                    h5.card-title 
                    form(action='/users/login' method='post')
                        .input-group
                            //- .input-group-prepend
                            //-     span.input-group-text(id='') 使用者名稱
                            input.form-control(type='text' name='username' placeholder="Username" required="required")
                        .input-group.mt-3
                            //- .input-group-prepend
                            //-     span.input-group-text(id='') 密碼
                            input.form-control(type='password' name='password' placeholder="Password" data-toggle="password" required="required")
                        input.btn.btn-primary.btn-lg.btn-block.mt-3(type='submit' value='Sign in')
                        p.mt-2.text-left No account? <a href="#" data-toggle='modal' data-target='#registerModal'>Sign up</a>
                        p Or
                        button.btn.btn-outline-info.btn-lg.btn-block.loadInfo(type='button' data-toggle='modal' data-target='#confirmModal') Sign in with Ethereum account
                        button.btn.btn-outline-success.btn-lg.btn-block(type='button' onclick="javascript:location.href='/metamask-connect/'") Metamask Test Page
                        button.btn.btn-outline-secondary.btn-lg.btn-block(type='button' onclick="javascript:location.href='/regAccessBehaviorTracking/'") Access Behavior tracking by Regulatory Authority

    // Register Modal
    #registerModal.modal.fade(tabindex='-1' role='dialog' aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .card.text-center
                    .card-header(style="font-size: 1.5rem; font-weight:bold")
                        | Account Register
                        button.close(type='button' data-dismiss='modal' aria-label='Close')
                            span(aria-hidden='true') ×
                .card-body
                    h5.card-title 
                    form(action='/api/user' method='post')
                        .input-group
                            .input-group-prepend
                                span.input-group-text(id='') Username
                            input.form-control(type='text' name='username' placeholder="" required="required")
                        .input-group.mt-3
                            .input-group-prepend
                                span.input-group-text(id='') Password
                            input.form-control(type='password' name='password' placeholder="" required="required")
                        .input-group.mt-3
                            .input-group-prepend
                                span.input-group-text(id='') Confirm Password
                            input.form-control(type='password' name='confirmPassword' placeholder="" required="required")
                        .input-group.mt-3
                            .input-group-prepend
                                span.input-group-text(id='') Email
                            input.form-control(type='email' name='email' placeholder="" required="required")
                        .input-group.mt-3
                            .input-group-prepend
                                span.input-group-text(id='') Phone Number
                            input.form-control(type='tel' name='phone' placeholder="" required="required")
                        .input-group.mt-3
                            .input-group-prepend
                                span.input-group-text(id='') Identification Number
                            input.form-control(type='text' name='id' placeholder="")
                        input.btn.btn-success.btn-lg.btn-block.mt-4(type='submit' value='Sign up')
    
    // Confirm Dialog
    #confirmModal.modal.fade(tabindex='-1' role='dialog')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5.modal-title System Message
                    button.close(type='button' data-dismiss='modal' aria-label='Close')
                        span(aria-hidden='true') ×
                .modal-body
                    p Login with this account?
                    p Current account (Address)
                    p.address.text-uppercase.font-weight-bold.text-center ...
                .modal-footer
                    button.btn.btn-primary.loginWithMetamask(type='button') Continue
                    button.btn.btn-secondary(type='button' data-dismiss='modal') Close

    script. 
        $(function() {
            const emptyAddress = "0x0000000000000000000000000000000000000000000000000000000000000000";
            let contract_address = "#{address}";
            let account = "";

            $(".modal").on("hidden.bs.modal", function() {
                $(this).find('form').trigger('reset');
            });

            window.ethereum.on('accountsChanged', function(accounts) {
                account = accounts[0];
                $("#confirmModal").find('.modal-body .address').text(account);                
            });

            $(".loadInfo").on("click", function(e) {
                $.getScript("/javascripts/web3_bundle.js", function(data, textStatus, jqxhr) {                        
                    web3.eth.getAccounts().then((accounts) => {
                        account = accounts[0];
                        $("#confirmModal").find('.modal-body .address').text(account);
                    });
                });                
            });

            $(".loginWithMetamask").on('click', function(e) {
                $.getScript( "/javascripts/web3_bundle.js", async function(data, textStatus, jqxhr) {
                    $.getJSON('/contracts/OrganizationManager.json', function (data) {
                        console.log(data);
                        let contractInstance = new web3.eth.Contract(data.abi, contract_address);
                        contractInstance.methods.getId().call({from: account})
                        .then( (result) => {
                            if (result === emptyAddress)
                                return Promise.reject("This account has not been bound!");
                            else {
                                // Sign the identity and then send to server
                                return Promise.resolve(result);
                            }
                        })
                        .then( (result) => {
                            web3.eth.personal.sign(result, account).then((res) => {
                                $.ajax({
                                    url: '/users/loginWithMetamask',
                                    data: { 
                                        identity: result, // identity
                                        signature: res,   // signature
                                        account: account  // account
                                    },
                                    type: 'post',
                                    success: function(res) {
                                        console.log("success");
                                        console.log(res);
                                        //- window.location.replace("/profile");
                                        if (res.url)
                                            window.location.href = res.url;
                                    },
                                    error: function(err) {
                                        console.log("error");
                                        alert();
                                    }
                                });

                            });
                        })
                        .catch( (err) => {
                            alert(err);
                        });                
                    });
                });
            });
        });

extends layout

block content
    .col-md-6.center-block.offset-md-3(style="display: none;")
        .card.text-center
            .card-header(style="font-size: 1.5rem; font-weight:bold")
                | Open an account
            .card-body.text-left
                form(action='/users/oao' enctype="multipart/form-data" method='post')
                    .col-12                   
                        label.form-label(for='account')
                            | Blockchain account
                            span.text-muted  (Current Ethereum address)
                        input.form-control.current-account(type='text' name='ethAccount' value='...' readonly style='background-color:white') 
                    .col-12.mt-3
                        label.form-label(for='select')
                            | Select other hospital
                        .input-group
                            select#inputGroupSelect02.custom-select(name='selectedBank' required)
                                option(value='') Select hospital...
                                option(value='1') One
                                option(value='2') Two
                                option(value='3') Three
                    .col-12.mt-3
                        label.form-label(for='select')
                            | Upload ID
                        //    
                            .input-group
                                .custom-file
                                    input#id-doc-input.custom-file-input(type='file' name="idDoc" accept="image/png, image/jpeg" required)
                                    label.custom-file-label(for='id-doc-input') select document
                    hr.my-4
                    .col-12.mt-3 
                        .form-check 
                            input.form-check-input(type="checkbox" required)
                            label.form-check-label(for='checkregulation') I have read and agree to the OOO term
                    .col-6.mt-3.offset-md-3
                        input.btn.btn-outline-info.btn-block(type='submit' value="account opening and authorization") 
            .card-footer.text-muted.text-left(style="font-size: 0.875rem;")
                .mb-2.pl-2
                    | Tips before account opening and authorization
                .mb-2.pl-2                    
                    i.far.fa-star
                        | &nbsp Account opening: ID (Driver's license or Passport or SSN)
                .mb-2.pl-2                    
                    i.far.fa-star
                        | &nbsp Authorization: Get other hospital account information through blockchain authorization

    .col-md-6.center-block.offset-md-3
        .card.text-center
            .card-header(style="font-size: 1.5rem; font-weight:bold")
                | Open an account
            .card-body.text-left                
                form#msform.needs-validation(action='/users/oao' enctype="multipart/form-data" method='post' novalidate)
                    // progressbar
                    ul#progressbar
                        li#account.icon.active
                            strong Fill in personal information
                        li#auth.icon
                            strong Authorize hospital to access data
                        li#confirm.icon
                            strong Complete
                    // fieldsets
                    fieldset
                        .form-card
                            .col-12                   
                                label.form-label(for='account')
                                    | Blockchain account
                                    span.text-muted  (Current Ethereum address)
                                input.form-control.current-account(type='text' name='ethAccount' value='...' readonly style='background-color:white') 
                            .col-12.mt-3
                                label.form-label(for='select')
                                    | Select other hospital
                                .input-group
                                    select#inputBankSelect.custom-select.form-select(name='selectedBank' required)
                                    .invalid-feedback
                                        | Please select any hospital where you have an account
                            .col-12.mt-3
                                label.form-label(for='select')
                                    | Upload ID                   
                                    .custom-file
                                        input#id-doc-input.custom-file-input(type='file' name="idDoc" accept="image/png, image/jpeg" required)
                                        label.custom-file-label(for='id-doc-input') Select document
                                        .invalid-feedback
                                            | Please upload your ID                                        
                            .col-12.mt-3      
                                label.form-label(for='account')
                                    | Contact
                                .input-group 
                                    input.form-control(type='text', name='phone', placeholder='Phone number' required)
                                    .invalid-feedback
                                        | Please enter your phone number
                                .input-group.mt-2
                                    input.form-control(type='email', name='email', placeholder='Email' required)
                                    .invalid-feedback
                                        | Please enter your email                                                                    
                            hr.my-4
                            .col-12.mt-3 
                                .input-group
                                    .form-check
                                        input.form-check-input(type="checkbox" style="display: inline-block" required)
                                        label.form-check-label(for='checkregulation') I have read and agree to the OOO term
                                        .invalid-feedback
                                            | Please check and agree to the term before continue
                        input.next.action-button(type='button' name='next' value='Next')
                    fieldset
                        .form-card
                            .col-12.text-center      
                                p 
                                    | Current&nbsp 
                                    span.current-bank(style="font-weight:bold; box-shadow: 0 1px; padding-bottom:2px") ...
                                    | &nbsp will receive PII data from&nbsp 
                                    span.selected-bank(style="font-weight:bold; box-shadow: 0 1px; padding-bottom:2px") ...
                                    | &nbsp.
                                p 
                                    | Current status is &nbsp 
                                    span.current-state(style="color: red; font-weight:bold; box-shadow: 0 1px; padding-bottom:2px") Not authorized
                                    | &nbsp。
                                    span.text-muted (No need to get authorized if already authorized)
                            .col-6.offset-3
                                button.btn.btn-primary.btn-block.confirm-approved-btn(type='button') Auth
                        hr.my-4
                        input.previous.action-button-previous(type='button' name='previous' value='previous')
                        input.confirm-and-submit-btn.action-button(type='button' name='make_payment' value='Confirm to send')
                    fieldset
                        .form-card
                            h2.fs-title.text-center application success !
                            br
                            br
                            .row.justify-content-center
                                .col-3
                                    img.fit-image(src='https://img.icons8.com/color/96/000000/ok--v2.png')
                            br
                            br
                            .row.justify-content-center
                                .col-7.text-center
                                    h5 Send and ready for account activation
            .card-footer.text-muted.text-left(style="font-size: 0.875rem;")
                .mb-2.pl-2
                    | Tips before account opening and authorization
                .mb-2.pl-2                    
                    i.far.fa-star
                        | &nbsp Account opening: ID (Driver's license or Passport or SSN)
                .mb-2.pl-2                    
                    i.far.fa-star
                        | &nbsp Authorization: Get other hospital account information through blockchain authorization                                    

    script. 
        $(function() {
            let contract_address = "#{address}";
            let target_address = "#{org_address}";
            let org_mapping = JSON.parse("#{org_mapping}".replace(/&quot;/g,'"'));
            let account = "";
            let accAddress;
            
            window.ethereum.on('accountsChanged', function(accounts) {
                account = accounts[0];
                $(".current-account").val(account);
            });

             // for web3_bundle.js
            $.getScript( "/javascripts/web3_bundle.js", async function(data, textStatus, jqxhr) {
                if (typeof(web3) !== "undefined") {
                    web3.eth.getAccounts().then((accounts) => {
                        account = accounts[0];
                        $(".current-account").val(account);
                    });
                }

                $.when(
                    $.getJSON('/contracts/OrganizationManager.json', function(data) {
                        data_org = data;
                    }),
                    $.getJSON('/contracts/AccessManager.json', function(data) {
                        data_acc = data;
                    })
                ).done(function() {
                    contractOrgInstance = new web3.eth.Contract(data_org.abi, contract_address);
                    
                    // Show banks that the user had registered.
                    contractOrgInstance.methods.getOrgList().call({from: account})
                    .then( async (orgs) => { // orgList      
                        $("#inputBankSelect").append(new Option("Select hospital..", '', true, true));
                        for (var i = 0; i < orgs.length; i++) {
                            console.log(i, orgs[i]);
                            await contractOrgInstance.methods.isRegistered(orgs[i]).call({from: account})
                            .then ( (r) => { // boolean
                                console.log(orgs[i], r);
                                if (r) {
                                    $("#inputBankSelect").append(new Option(org_mapping["0x"+orgs[i].substr(2).toUpperCase()][1], orgs[i]));
                                }

                            })
                        }
                    });

                    // init acc instance and selected bank address
                    let contractAccInstance;
                    let selectedAddress;
                    
                    $('#inputBankSelect').on('change', function(e) {
                        selectedAddress = this.value;
                        // Replace address with bank name
                        let currentFullName = org_mapping["0x"+target_address.substr(2).toUpperCase()][1];
                        let selectedFullName = org_mapping["0x"+this.value.substr(2).toUpperCase()][1];
                        $('.current-bank').text(currentFullName);
                        $('.selected-bank').text(selectedFullName);

                        // Show state of the bank
                        contractOrgInstance.methods.getAccessManagerAddress(account).call({from: account})
                        .then( (r) => {
                            contractAccInstance = new web3.eth.Contract(data_acc.abi, r);
                            accAddress = r;
                            console.log("accMgr:"+r);
                        })
                        .then( () => {
                            contractAccInstance.methods.validatePermission("pii", target_address, this.value).call({from: account})
                            .then( (r) => {
                                let txt = (r) ? "Authorized" : "Not authorized";
                                let clr = (r) ? "green" : "red";
                                $('.current-state').text(txt);
                                $('.current-state').css({"color": clr});
                            });
                        });
                    });

                    $('.confirm-approved-btn').on('click', () => {
                        contractAccInstance.methods.authorizeAccess("pii", target_address, selectedAddress).send({from: account})
                        .on('transactionHash', function(hash){
                            console.log(`transactionHash: ${hash}.`);                            
                        })
                        .on('receipt', function(receipt){
                            console.log(`receipt:`, receipt);
                            console.log(`log got:`, receipt.events.AccessAuthorization.returnValues);
                            $('.current-state').text("Authorized");
                            $('.current-state').css({"color": "green"});
                        });
                    });
                });         
            });

            // for show image name
            $('#id-doc-input').on('change',function(e){
                
                //get the file name
                var fileName = e.target.files[0].name;                
                //replace the "Choose a file" label
                $(this).next('.custom-file-label').html(fileName);
            });


            // ----------- multistep start -----------------
            var current_fs, next_fs, previous_fs; //fieldsets
            var opacity;
            var forms = document.querySelectorAll('.needs-validation')

            function showEffect() {
                //Add Class Active
                $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");

                //show the next fieldset
                next_fs.show();
                //hide the current fieldset with style
                current_fs.animate({opacity: 0}, {
                    step: function(now) {
                        // for making fielset appear animation
                        opacity = 1 - now;

                        current_fs.css({
                            'display': 'none',
                            'position': 'relative'
                        });
                        next_fs.css({'opacity': opacity});
                    },
                    duration: 600
                });

            }

            $(".next").click(function(){

                if (!forms[0].checkValidity()) {
                    forms[0].classList.add('was-validated')
                    return;        
                }

                current_fs = $(this).parent();
                next_fs = $(this).parent().next();
                showEffect();
            });

            $(".confirm-and-submit-btn").click(function() {
                let form = $("#msform")[0];

                // 建立一個新的 FormData 物件
                let formData = new FormData(form)

                // To inspect formdata
                formData.append("accAddress", accAddress);
                console.log(formData);
                for (var pair of formData.entries()) {
                    console.log(pair[0]+ ', ' + pair[1]); 
                }

                // To send 
                let item = {
                    'url': `/users/oao`,
                    'type': 'POST',
                    'headers': {
                        // 'Content-Type': 'multipart/form-data',
                        // 使用 multipart/form-data 在此不需要設定 Content-Type。
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    'contentType': false, //required
                    'processData': false, // required
                    'mimeType': 'multipart/form-data',
                    'data': formData
                }                

                $.ajax(item)
                .done((r) => {
                    let response = JSON.parse(r);
                    if (response["state"]) {
                        current_fs = $(this).parent();
                        next_fs = $(this).parent().next();
                        showEffect();
                    }
                    else {
                        alert(response["msg"]);
                    }
                })
                .fail((r) => {
                    alert(`Something broke. Error message ${r.responseText}`);
                    console.log(r);
                    console.log("Error", r.responseText);
                });

            });

            $(".previous").click(function(){
                current_fs = $(this).parent();
                previous_fs = $(this).parent().prev();

                //Remove class active
                $("#progressbar li").eq($("fieldset").index(current_fs)).removeClass("active");

                //show the previous fieldset
                previous_fs.show();

                //hide the current fieldset with style
                current_fs.animate({opacity: 0}, {
                    step: function(now) {
                        // for making fielset appear animation
                        opacity = 1 - now;
                        current_fs.css({
                            'display': 'none',
                            'position': 'relative'
                        });
                        previous_fs.css({'opacity': opacity});
                    },
                    duration: 600
                });
            });

            $(".submit").click(function(){
                return false;
            })            
            // ----------- multistep end   -----------------

        });